 FINAL CSS PROPERTIES LIST (Complete & Categorized)

1. üìê Layout & Positioning

display, position, top, right, bottom, left
z-index, float, clear, overflow, overflow-x, overflow-y
clip, clip-path, clip-rule
visibility, contain, contain-intrinsic-size, box-sizing
box-decoration-break, isolation
resize, object-fit, object-position, aspect-ratio
inset, inset-inline, inset-block, inset-inline-start, inset-inline-end


2. üß± Flexbox & Grid

flex, flex-basis, flex-grow, flex-shrink, flex-direction, flex-wrap, flex-flow
justify-content, align-items, align-self, align-content, order
grid, grid-template, grid-template-columns, grid-template-rows, grid-template-areas
grid-auto-flow, grid-auto-columns, grid-auto-rows
grid-column, grid-row, grid-column-start, grid-column-end
grid-row-start, grid-row-end, grid-gap, grid-column-gap, grid-row-gap
place-items, place-self, place-content


3. üî§ Typography

font, font-family, font-size, font-style, font-weight
font-variant, font-stretch, font-size-adjust
line-height, letter-spacing, word-spacing
text-align, text-align-last, text-indent, text-overflow
text-transform, text-decoration, text-decoration-line
text-decoration-style, text-decoration-color
text-shadow, white-space, word-wrap, word-break
hyphens, writing-mode, direction, unicode-bidi
text-emphasis, text-emphasis-color, text-emphasis-style, text-emphasis-position
text-combine-upright, text-orientation
text-underline-position, text-underline-offset, text-underline-color



4. üé® Colors & Backgrounds

color, opacity
background, background-color, background-image, background-repeat
background-position, background-position-x, background-position-y
background-size, background-size-x, background-size-y
background-attachment, background-origin, background-clip
background-blend-mode, mix-blend-mode



5. üì¶ Box Model & Spacing

margin, margin-top, margin-right, margin-bottom, margin-left
padding, padding-top, padding-right, padding-bottom, padding-left
border, border-width, border-style, border-color
border-top, border-right, border-bottom, border-left
border-radius, border-top-left-radius, border-top-right-radius
border-bottom-left-radius, border-bottom-right-radius
outline, outline-width, outline-style, outline-color, outline-offset
box-shadow, box-sizing



6. üåÄ Transitions & Animations

transition, transition-property, transition-duration
transition-timing-function, transition-delay
animation, animation-name, animation-duration
animation-timing-function, animation-delay
animation-iteration-count, animation-direction
animation-fill-mode, animation-play-state, will-change


7. üé≠ Transforms & 3D

transform, transform-origin, transform-style
rotate, scale, translate, skew
matrix, matrix3d, translate3d, rotate3d, scale3d
perspective, perspective-origin, perspective-origin-x, perspective-origin-y
backface-visibility



8. üîç Filters & Effects

filter, backdrop-filter
box-shadow, text-shadow
mix-blend-mode
clip-path, clip-rule



9. üëÜ User Interface

cursor, pointer-events, user-select
resize, appearance, caret-color
scrollbar-width, scrollbar-color
accent-color


10. üß™ Generated Content (Pseudo-Elements)

::before, ::after, ::first-letter, ::first-line
::selection, ::placeholder, ::backdrop, ::marker, ::spelling-error, ::grammar-error



11. üîò State & Structural Selectors (Pseudo-Classes)

:hover, :focus, :active, :visited, :link
:disabled, :enabled, :checked, :indeterminate
:valid, :invalid, :required, :optional, :read-only, :read-write
:placeholder-shown, :target, :focus-visible, :focus-within
:first-child, :last-child, :only-child, :nth-child(n), :nth-last-child(n)
:first-of-type, :last-of-type, :nth-of-type(n), :nth-last-of-type(n), :only-of-type
:not(), :is(), :where(), :has()
:empty, :root, :lang()


12. üîÑ Scroll & Viewport

scroll-behavior, scroll-margin, scroll-padding
scroll-snap-type, scroll-snap-align, scroll-snap-stop
overflow-anchor, overscroll-behavior
contain, contain-intrinsic-width, contain-intrinsic-height



13. üìè Writing Modes & Logical Properties

writing-mode, text-orientation, direction, unicode-bidi
margin-inline, margin-block, padding-inline, padding-block
border-inline, border-block, inset-inline, inset-block



14. üì± Media & Responsive Design

@media, @supports, @container
aspect-ratio, width, height, min-width, max-width, min-height, max-height


‚úÖ Summary
All important, rare, and obscure CSS properties are included.
Fully interview-ready, especially for big companies.
Use this list as a final prep sheet or checklist.
Covers modern CSS, including logical properties, :has(), @container, etc.





-----------------------OTHER THAN THIS VERY ADVANCED AND MODERN PROPERTIES-------------


## üß± Layout & Positioning

- **CSS Grid Layout**: Enables two-dimensional layouts with properties like `grid-template-areas`, `grid-auto-flow`, and `grid-gap`.

- **Flexbox Enhancements**: Advanced usage of `flex-basis`, `flex-grow`, and `flex-shrink` for responsive designs.

- **Logical Properties**: Use of `margin-inline-start`, `padding-block-end`, and `inset-inline-start` for writing-mode-aware layouts.  ([CSS logical properties and values - MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_logical_properties_and_values?utm_source=chatgpt.com))

- **Scroll Snap**: Smooth scrolling experiences using `scroll-snap-type`, `scroll-snap-align`, and `scroll-padding`.

- **Container Queries**: Responsive designs based on container size using `@container` and related properties.

- **Subgrid**: Allows nested grids to align with parent grid tracks.

---

## üé® Visual Effects & Styling

- **CSS Variables (Custom Properties)**: Dynamic theming with `--variable-name` and `var(--variable-name)`.

- **Relative Color Syntax & `light-dark()`**: Adjust colors relative to existing ones and switch between light and dark themes seamlessly.  ([The 10 Best New CSS Features in 2025 Already Supported in All ...](https://medium.com/%40karstenbiedermann/the-10-best-new-css-features-in-2025-already-supported-in-all-major-browsers-c4a4cbbf71ea?utm_source=chatgpt.com))

- **Mix Blend Modes**: Creative layering effects using `mix-blend-mode`.

- **Backdrop Filters**: Apply effects like blur to backgrounds with `backdrop-filter`. ([A Look at the Future of CSS](https://www.wired.com/2012/12/a-look-at-the-future-of-css?utm_source=chatgpt.com))

- **Masking**: Control element visibility using `mask`, `mask-image`, and `clip-path`. ([What CSS properties/concepts are the most useful in the real world](https://www.reddit.com/r/webdev/comments/ry8xpc/what_css_propertiesconcepts_are_the_most_useful/?utm_source=chatgpt.com))

---

## üñãÔ∏è Typography & Text

- **Logical Text Alignment**: Use `text-align: start` or `end` for direction-aware alignment. ([Logical Properties - web.dev](https://web.dev/learn/css/logical-properties?utm_source=chatgpt.com))

- **Text Emphasis**: Highlight text with `text-emphasis-style`, `text-emphasis-color`, and `text-emphasis-position`.

- **Ruby Annotations**: Support for East Asian typography with `ruby-align` and `ruby-position`.  ([The 10 Best New CSS Features in 2025 Already Supported in All ...](https://medium.com/%40karstenbiedermann/the-10-best-new-css-features-in-2025-already-supported-in-all-major-browsers-c4a4cbbf71ea?utm_source=chatgpt.com))

---

## üé¨ Animations & Transitions

- **@keyframes Enhancements**: Advanced animations using `@keyframes` with properties like `animation-delay`, `animation-direction`, and `animation-fill-mode`.

- **Transition Timing Functions**: Custom easing with `cubic-bezier` functions.

- **@starting-style**: Define the starting style of an animation for smoother transitions. ([CSS logical properties and values - MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_logical_properties_and_values?utm_source=chatgpt.com))

---

## üß™ Advanced Features

- **CSS Houdini**: Extend CSS with JavaScript APIs for custom properties and layout.

- **Cascade Layers (`@layer`)**: Control specificity and layering of styles.

- **Feature Queries (`@supports`)**: Apply styles based on browser support for specific features.

- **Scrollbars Styling**: Customize scrollbars with `scrollbar-color` and `scrollbar-width`. ([The 10 Best New CSS Features in 2025 Already Supported in All ...](https://medium.com/%40karstenbiedermann/the-10-best-new-css-features-in-2025-already-supported-in-all-major-browsers-c4a4cbbf71ea?utm_source=chatgpt.com))

---

## üß≠ Direction & Writing Modes

- **Writing Modes**: Control text flow with `writing-mode` (e.g., `vertical-rl`, `horizontal-tb`). ([16 Advanced CSS Best Practices - Capicua](https://www.capicua.com/blog/advanced-css-best-practices?utm_source=chatgpt.com))

- **Directionality**: Set text direction with `direction: rtl` or `ltr`.

---

## üß© Pseudo-Classes & Elements

- **`:is()` and `:where()`**: Simplify selectors with these pseudo-classes.

- **`:has()`**: Select elements based on their descendants or state.

- **`::target-text`**: Style text targeted by fragment identifiers.  ([Tailwind CSS](https://en.wikipedia.org/wiki/Tailwind_CSS?utm_source=chatgpt.com))



üß∞ Tools & Techniques

- **Clamp Function**: Responsive sizing with `clamp(min, preferred, max)`. ([New CSS Features You Need to Know in 2025 | GeeksforGeeks](https://www.geeksforgeeks.org/modern-css-features-you-need-to-know-in-2024/?utm_source=chatgpt.com))

- **Min/Max Functions**: Set size constraints using `min()` and `max()`.

- **Aspect-Ratio**: Maintain consistent aspect ratios with the `aspect-ratio` property.
